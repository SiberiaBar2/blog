{
    "version": "https://jsonfeed.org/version/1",
    "title": "Queek blog • All posts by \"data\" category",
    "description": "like dream",
    "home_page_url": "https://queek.cn",
    "items": [
        {
            "id": "https://queek.cn/2025/04/01/2025-4-1/",
            "url": "https://queek.cn/2025/04/01/2025-4-1/",
            "title": "25-april-1",
            "date_published": "2025-04-01T11:17:04.000Z",
            "content_html": "<h3 id=\"多条件过滤数组元素-支持数组条件\"><a href=\"#多条件过滤数组元素-支持数组条件\" class=\"headerlink\" title=\"多条件过滤数组元素&amp;&amp;支持数组条件\"></a>多条件过滤数组元素&amp;&amp;支持数组条件</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在自我联调、mock 过程中 ，如果无法安装使用数据库，可以使用这个方法 多条件、单条件 单个字段为数组（多选） 过滤数据，</span><br><span class=\"line\"></span><br><span class=\"line\">然后通过express或python 返回前端。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">queryFilter</span> = (<span class=\"params\">list, query</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> list?.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">ele</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 多条件</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">key</span>(query).<span class=\"title function_\">every</span>(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (query[key] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 当参数为数组 表示选中多个的情况</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> query[key].<span class=\"title function_\">includes</span>(ele[key])</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ele[key] === query[key]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"组件封装的类型\"><a href=\"#组件封装的类型\" class=\"headerlink\" title=\"组件封装的类型\"></a>组件封装的类型</h3><h4 id=\"复用型\"><a href=\"#复用型\" class=\"headerlink\" title=\"复用型\"></a>复用型</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">复用性组件，一般是在多个页面有相同页面样式、逻辑的情况下，考虑封装复用型组件。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"根据页面结构划分\"><a href=\"#根据页面结构划分\" class=\"headerlink\" title=\"根据页面结构划分\"></a>根据页面结构划分</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在拿到需求后，</span><br><span class=\"line\"></span><br><span class=\"line\">我们一般需要对业务模块进行拆分，</span><br><span class=\"line\"></span><br><span class=\"line\">体现在页面上的，</span><br><span class=\"line\"></span><br><span class=\"line\">就是不同的模块。</span><br><span class=\"line\"></span><br><span class=\"line\">比如 头部、中间部分，footer部分。</span><br><span class=\"line\"></span><br><span class=\"line\">在更大的页面中， 还要进行更细的划分，比如 “中间部分” 的页面。</span><br><span class=\"line\"></span><br><span class=\"line\">根据需要，如果某个组件的一个状态值需要在其他兄弟组件使用，</span><br><span class=\"line\"></span><br><span class=\"line\">还要将这个状态 “提升” 到父组件进行维护。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取出对象类型的值类型-组成一个联合类型\"><a href=\"#取出对象类型的值类型-组成一个联合类型\" class=\"headerlink\" title=\"取出对象类型的值类型 组成一个联合类型\"></a>取出对象类型的值类型 组成一个联合类型</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> A = &#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  <span class=\"attr\">b</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">AValueType</span> = A[keyof A] <span class=\"comment\">// string | number</span></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        }
    ]
}