{
    "version": "https://jsonfeed.org/version/1",
    "title": "Queek blog • All posts by \"date\" tag",
    "description": "like dream",
    "home_page_url": "https://queek.cn",
    "items": [
        {
            "id": "https://queek.cn/2025/08/24/2025-08-24-25-August-24/",
            "url": "https://queek.cn/2025/08/24/2025-08-24-25-August-24/",
            "title": "25-August-24",
            "date_published": "2025-08-24T03:41:25.000Z",
            "content_html": "<h3 id=\"ts声明函数类型\"><a href=\"#ts声明函数类型\" class=\"headerlink\" title=\"ts声明函数类型\"></a>ts声明函数类型</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">CbCallback</span> &#123;</span><br><span class=\"line\">  (<span class=\"attr\">cb</span>: <span class=\"function\">() =&gt;</span> <span class=\"built_in\">void</span>): <span class=\"built_in\">void</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">c</span>: <span class=\"title class_\">CbCallback</span> = <span class=\"function\">() =&gt;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里不传参数或者类型不正确就会报错</span></span><br><span class=\"line\"><span class=\"title function_\">c</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vant-checkboxGroup-组件对于使用对象作为值时的回显\"><a href=\"#vant-checkboxGroup-组件对于使用对象作为值时的回显\" class=\"headerlink\" title=\"vant-checkboxGroup 组件对于使用对象作为值时的回显\"></a>vant-checkboxGroup 组件对于使用对象作为值时的回显</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在移动开发中</span><br><span class=\"line\"></span><br><span class=\"line\">需要对后续复杂操作处理</span><br><span class=\"line\"></span><br><span class=\"line\">这时候设置设置单纯的基本类型值就不够用了</span><br><span class=\"line\"></span><br><span class=\"line\">我们需要将checkboxGroup选择的值设置为对象 </span><br><span class=\"line\"></span><br><span class=\"line\">也就是name为一个对象</span><br><span class=\"line\"></span><br><span class=\"line\">但是后续如果需要回显</span><br><span class=\"line\"></span><br><span class=\"line\">就会发现无法回显了</span><br><span class=\"line\"></span><br><span class=\"line\">这是因为回显的对象引用和渲染列表的对象引用不一致，是两个不同的对象</span><br><span class=\"line\"></span><br><span class=\"line\">因此是无法回显的</span><br><span class=\"line\"></span><br><span class=\"line\">我们需要将要回显的对象引用和整个渲染列其中的对象引用保持一致</span><br><span class=\"line\"></span><br><span class=\"line\">也就是设置的result变量数组中的选中项 </span><br><span class=\"line\"></span><br><span class=\"line\">要和list中对一个的哪一项对象引用一致，就可以正常回显</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;van-checkbox-group v-model=<span class=\"string\">&quot;result&quot;</span> ref=<span class=\"string\">&quot;checkboxGroup&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;a&quot;</span>&gt;</span>复选框 a<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;b&quot;</span>&gt;</span>复选框 b<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;c&quot;</span>&gt;</span>复选框 c<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">&lt;/van-checkbox-group&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;van-checkbox-group v-model=<span class=\"string\">&quot;result&quot;</span> ref=<span class=\"string\">&quot;checkboxGroup&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in list&quot;</span> <span class=\"attr\">:name</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">&lt;/van-checkbox-group&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在watch中监听到变化</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">result</span> = [...<span class=\"variable language_\">this</span>.<span class=\"property\">list</span>, ...<span class=\"variable language_\">this</span>.<span class=\"property\">checkedList</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"react-通过传递不同的key来清空子组件状态\"><a href=\"#react-通过传递不同的key来清空子组件状态\" class=\"headerlink\" title=\"react 通过传递不同的key来清空子组件状态\"></a>react 通过传递不同的key来清空子组件状态</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在父组件渲染变化时，清空子组件的状态</span><br><span class=\"line\"></span><br><span class=\"line\">父组件状态更新时候   子组件也会更新  </span><br><span class=\"line\"></span><br><span class=\"line\">虽然会更新，但是子组件不会丢失其已经存在的状态</span><br><span class=\"line\"></span><br><span class=\"line\">那么每次在父组件更新时，</span><br><span class=\"line\"></span><br><span class=\"line\">传递给子组件每次不同的key属性</span><br><span class=\"line\"></span><br><span class=\"line\">子组件就会清空其内部状态（因为是一个全新的组件了）</span><br><span class=\"line\"></span><br><span class=\"line\">这样</span><br><span class=\"line\"></span><br><span class=\"line\">我们就能避免复杂的清空函数</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&lt;<span class=\"title class_\">Child</span> key=&#123;key&#125; userId=&#123;userId&#125; /&gt;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关于何时该使用useEffect\"><a href=\"#关于何时该使用useEffect\" class=\"headerlink\" title=\"关于何时该使用useEffect\"></a>关于何时该使用useEffect</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">尽可能在渲染期间进行计算</span><br><span class=\"line\"></span><br><span class=\"line\">不要链式的在effect中set  然后下一个effect依赖上一个effect中set后的值  这样非常低效</span><br><span class=\"line\"></span><br><span class=\"line\">effect在页面显示 （初次加载时）要执行一些逻辑  这个时候应该使用它</span><br><span class=\"line\"></span><br><span class=\"line\">用户操作的动作导致state发生改变, 这时不应该使用effect监听这个状态 继而 去更新其他状态  这并不合理</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"params\">#</span> 你可能并不需要effect</span><br><span class=\"line\"></span><br><span class=\"line\">https://zh-hans.react.dev/learn/you-might-not-need-an-effect</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"react-useSyncExternalStore-hook\"><a href=\"#react-useSyncExternalStore-hook\" class=\"headerlink\" title=\"react useSyncExternalStore hook\"></a>react useSyncExternalStore hook</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useSyncExternalStore 接收三个函数参数</span><br><span class=\"line\"></span><br><span class=\"line\">第一个是订阅，</span><br><span class=\"line\"></span><br><span class=\"line\">  第一个订阅函数接收一个回调，执行这个回调可以触发react更新渲染，</span><br><span class=\"line\"></span><br><span class=\"line\">  这个订阅函数通常代表订阅了这个hook的组件更新函数，</span><br><span class=\"line\"></span><br><span class=\"line\">   你可以把这个订阅函数看做触发器dispath</span><br><span class=\"line\"></span><br><span class=\"line\">   一般我们在订阅函数用不急于执行触发器，</span><br><span class=\"line\"></span><br><span class=\"line\">   可以把它存储起来，</span><br><span class=\"line\"></span><br><span class=\"line\">   等到其他动作执行需要更新渲染组件的时候，</span><br><span class=\"line\"></span><br><span class=\"line\">   在把存储的所有dispath列表全部执行。</span><br><span class=\"line\"></span><br><span class=\"line\">   如果有多个组件的useSyncExternalStore 的订阅函数和快照函数都出自同一个实例，</span><br><span class=\"line\"></span><br><span class=\"line\">   那么他们将会共享状态，</span><br><span class=\"line\"></span><br><span class=\"line\">   实现另类的react状态数据共享</span><br><span class=\"line\"></span><br><span class=\"line\">第二个是快照，</span><br><span class=\"line\"></span><br><span class=\"line\">第三个是服务端渲染的快照，第二个和第三个返回的快照的内容必须相同</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用useSyncExternalStore的状态共享\"><a href=\"#使用useSyncExternalStore的状态共享\" class=\"headerlink\" title=\"使用useSyncExternalStore的状态共享\"></a>使用useSyncExternalStore的状态共享</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> cbs = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">useStorage</span> = (<span class=\"params\">key, initValue</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">//订阅者</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">subscribe</span> = (<span class=\"params\">cb</span>) =&gt; &#123;</span><br><span class=\"line\">    cbs = [...cbs, cb];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      cbs = cbs.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">l</span> =&gt;</span> l !== cb);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">emitChange</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> cb <span class=\"keyword\">of</span> cbs) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">cb</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//返回当前快照</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">getSnapshot</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(key) ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(key)) : initValue</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">updateStorage</span> = (<span class=\"params\">value</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(key, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(value))</span><br><span class=\"line\">    <span class=\"comment\">//手动触发Storage的事件 </span></span><br><span class=\"line\">    <span class=\"comment\">// window.dispatchEvent(new StorageEvent(&#x27;storage&#x27;))</span></span><br><span class=\"line\">    <span class=\"title function_\">emitChange</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = <span class=\"title function_\">useSyncExternalStore</span>(subscribe, getSnapshot)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [res, updateStorage]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count1, setCount1] = <span class=\"title function_\">useStorage</span>(<span class=\"string\">&#x27;count1&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">  &lt;div className=&quot;container mx-auto px-4 py-8 max-w-3xl&quot;&gt;</span><br><span class=\"line\">    &lt;header className=&quot;mb-8 text-center&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        count</span><br><span class=\"line\">        &lt;span&gt;</span><br><span class=\"line\">          &#123;count1&#125;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;() =&gt; setCount1(count1 + 1)&#125;&gt;新增&lt;/button&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;() =&gt; setCount1(count1 - 1)&#125;&gt;减少&lt;/button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue模版中的“解构赋值”\"><a href=\"#vue模版中的“解构赋值”\" class=\"headerlink\" title=\"vue模版中的“解构赋值”\"></a>vue模版中的“解构赋值”</h3><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过下面这种绑定一个动态对象的方式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将所有属性给到组件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 等同于 react 当中的 </span></span><br><span class=\"line\"><span class=\"comment\">// react</span></span><br><span class=\"line\">&lt;<span class=\"title class_\">Child</span>  &#123;...props&#125;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vue</span></span><br><span class=\"line\"><span class=\"comment\">// 如果接受的组件内部已经定义了这些同名属性，传入的属性将无法覆盖，</span></span><br><span class=\"line\"><span class=\"comment\">// 考虑使用计算属性合并新旧属性值</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Popup</span> </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">...</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">..</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">.</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">:pageConfig</span>=<span class=\"string\">&quot;&#123;round: false, closeable: true&#125;&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">/&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加一个微任务\"><a href=\"#添加一个微任务\" class=\"headerlink\" title=\"添加一个微任务\"></a>添加一个微任务</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">addMicrotask</span>(<span class=\"params\">callback</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> queueMicrotask === <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">queueMicrotask</span>(callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">    <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关于react组件拆分时的状态控制\"><a href=\"#关于react组件拆分时的状态控制\" class=\"headerlink\" title=\"关于react组件拆分时的状态控制\"></a>关于react组件拆分时的状态控制</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果父组件有多个子组件，</span><br><span class=\"line\"></span><br><span class=\"line\">子组件需要根据父组件的状态来更新自身，</span><br><span class=\"line\"></span><br><span class=\"line\">这种情况下，</span><br><span class=\"line\"></span><br><span class=\"line\">应该把父组件传递给子组件的属性统一放到一个对象中维护，</span><br><span class=\"line\"></span><br><span class=\"line\">这样不管什么状态发生变化，</span><br><span class=\"line\"></span><br><span class=\"line\">都只更新这个对象，</span><br><span class=\"line\"></span><br><span class=\"line\">不会带来多次的重复渲染，</span><br><span class=\"line\"></span><br><span class=\"line\">带来性能问题。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2025/05/24/2025-05-24-may24th/",
            "url": "https://queek.cn/2025/05/24/2025-05-24-may24th/",
            "title": "may24th",
            "date_published": "2025-05-24T07:04:50.000Z",
            "content_html": "<h3 id=\"获取当前时间所对应的周一\"><a href=\"#获取当前时间所对应的周一\" class=\"headerlink\" title=\"获取当前时间所对应的周一\"></a>获取当前时间所对应的周一</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs 和 moment 能够正确处理跨年跨月以及夏令时，符合iso标准</span><br><span class=\"line\"></span><br><span class=\"line\">utc时间从开始时间的 00:00:00 开始 ，结束时间从 23:59:59结束。</span><br><span class=\"line\"></span><br><span class=\"line\">在比较时间戳大小的时候要注意：</span><br><span class=\"line\"></span><br><span class=\"line\">  new Date(&#x27;2025-09-20&#x27;) 默认会被转为utc时间，</span><br><span class=\"line\">  </span><br><span class=\"line\">  new Date(&#x27;2025-09-20&#x27;)的时间戳和new Date() （即使现在是2025-09-20，这种写法也和utc对不上）的时间戳会不一致</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"原生\"><a href=\"#原生\" class=\"headerlink\" title=\"原生\"></a>原生</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getUTCWeekRange</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 基于 UTC 的星期计算（0=周日，1=周一...6=周六）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> utcDay = now.<span class=\"title function_\">getUTCDay</span>(); </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 计算到 UTC 周一的天数差</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> mondayDiff = utcDay === <span class=\"number\">0</span> ? <span class=\"number\">6</span> : utcDay - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 计算到 UTC 周日的天数差（如果是周日则无需调整）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> sundayDiff = utcDay === <span class=\"number\">0</span> ? <span class=\"number\">0</span> : <span class=\"number\">7</span> - utcDay;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 构建 UTC 周一</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> utcMonday = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">UTC</span>(</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCFullYear</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCMonth</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCDate</span>() - mondayDiff</span><br><span class=\"line\">  ));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 构建 UTC 周日</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> utcSunday = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">UTC</span>(</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCFullYear</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCMonth</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCDate</span>() + sundayDiff</span><br><span class=\"line\">  ));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; utcMonday, utcSunday &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"dayjs\"><a href=\"#dayjs\" class=\"headerlink\" title=\"dayjs\"></a>dayjs</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> dayjs <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> utc <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs/plugin/utc&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> isoWeek <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs/plugin/isoWeek&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> timezone <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs/plugin/timezone&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">dayjs.<span class=\"title function_\">extend</span>(utc);</span><br><span class=\"line\">dayjs.<span class=\"title function_\">extend</span>(isoWeek);</span><br><span class=\"line\">dayjs.<span class=\"title function_\">extend</span>(timezone);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取UTC标准周范围（周一00:00:00至周日23:59:59.999）</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string|Date</span>&#125; [date] - 可选的日期输入，默认当前时间</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns</span> &#123;<span class=\"type\">&#123;</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   start: Date,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   end: Date,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   isoWeekNumber: number,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   isoYear: number,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   isoRange: string</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> * </span>&#125;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getEnhancedUTCWeekRange</span>(<span class=\"params\">date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> base = <span class=\"title function_\">dayjs</span>(date).<span class=\"title function_\">utc</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 计算ISO标准周起始日（周一）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> start = base.<span class=\"title function_\">startOf</span>(<span class=\"string\">&#x27;isoWeek&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 计算周结束日（周日）并设置到当日最后一毫秒</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> end = start.<span class=\"title function_\">clone</span>().<span class=\"title function_\">endOf</span>(<span class=\"string\">&#x27;day&#x27;</span>).<span class=\"title function_\">add</span>(<span class=\"number\">6</span>, <span class=\"string\">&#x27;day&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">start</span>: start.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">end</span>: end.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoWeekNumber</span>: base.<span class=\"title function_\">isoWeek</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoYear</span>: base.<span class=\"title function_\">isoWeekYear</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoRange</span>: <span class=\"string\">`<span class=\"subst\">$&#123;start.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>/<span class=\"subst\">$&#123;end.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>`</span>,</span><br><span class=\"line\">    <span class=\"attr\">days</span>: <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: <span class=\"number\">7</span> &#125;, <span class=\"function\">(<span class=\"params\">_, i</span>) =&gt;</span> </span><br><span class=\"line\">      start.<span class=\"title function_\">add</span>(i, <span class=\"string\">&#x27;day&#x27;</span>).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getEnhancedUTCWeekRange</span>(<span class=\"params\">date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> base = <span class=\"title function_\">moment</span>(date).<span class=\"title function_\">utc</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 计算ISO标准周起始日（周一）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> start = base.<span class=\"title function_\">clone</span>().<span class=\"title function_\">startOf</span>(<span class=\"string\">&#x27;isoWeek&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 计算周结束日（周日）并设置到当日最后一毫秒</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> end = start.<span class=\"title function_\">clone</span>().<span class=\"title function_\">endOf</span>(<span class=\"string\">&#x27;day&#x27;</span>).<span class=\"title function_\">add</span>(<span class=\"number\">6</span>, <span class=\"string\">&#x27;day&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">start</span>: start.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">end</span>: end.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoWeekNumber</span>: base.<span class=\"title function_\">isoWeek</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoYear</span>: base.<span class=\"title function_\">isoWeekYear</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoRange</span>: <span class=\"string\">`<span class=\"subst\">$&#123;start.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>/<span class=\"subst\">$&#123;end.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>`</span>,</span><br><span class=\"line\">    <span class=\"attr\">days</span>: <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: <span class=\"number\">7</span> &#125;, <span class=\"function\">(<span class=\"params\">_, i</span>) =&gt;</span> </span><br><span class=\"line\">      start.<span class=\"title function_\">clone</span>().<span class=\"title function_\">add</span>(i, <span class=\"string\">&#x27;days&#x27;</span>).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"点击事件、onChange事件防抖\"><a href=\"#点击事件、onChange事件防抖\" class=\"headerlink\" title=\"点击事件、onChange事件防抖\"></a>点击事件、onChange事件防抖</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们都知道 ，</span><br><span class=\"line\"></span><br><span class=\"line\">不能直接对高频的onChange事件加上防抖，</span><br><span class=\"line\"></span><br><span class=\"line\">直接加上会使输入卡顿。</span><br><span class=\"line\"></span><br><span class=\"line\">因此 ，我们可以对onChange之后要做的事进行防抖。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// setTab是外界传入 间接的对引发高频请求的变量防抖</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> debounced = <span class=\"title function_\">debounce</span>(<span class=\"function\">(<span class=\"params\"><span class=\"attr\">tab</span>: <span class=\"built_in\">string</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setTab</span>(tab)</span><br><span class=\"line\">&#125;, <span class=\"number\">800</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"title class_\">Input</span> onChange=&#123;<span class=\"function\">(<span class=\"params\">tab</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">debounced</span>(tab)</span><br><span class=\"line\">&#125;&#125;/&gt;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"需要保持一个防抖实例的情况\"><a href=\"#需要保持一个防抖实例的情况\" class=\"headerlink\" title=\"需要保持一个防抖实例的情况\"></a>需要保持一个防抖实例的情况</h5><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果在onChange的时候会引起组件重渲染，需要保持一个防抖实例 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以下两种写法皆可</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> debounced = <span class=\"title function_\">useCallback</span>(<span class=\"title function_\">debounce</span>(<span class=\"function\">(<span class=\"params\"><span class=\"attr\">tab</span>: <span class=\"built_in\">string</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setTab</span>(tab)</span><br><span class=\"line\">&#125;, <span class=\"number\">800</span>), [])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> debounceRef = <span class=\"title function_\">useRef</span>(<span class=\"title function_\">debounce</span>(<span class=\"function\">(<span class=\"params\"><span class=\"attr\">tab</span>: <span class=\"built_in\">string</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setTab</span>(tab)</span><br><span class=\"line\">&#125;, <span class=\"number\">800</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"title class_\">Input</span> onChange=&#123;<span class=\"function\">(<span class=\"params\">tab</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">debounced</span>(tab)</span><br><span class=\"line\">    <span class=\"title function_\">debounceRef</span>(tab)</span><br><span class=\"line\">&#125;&#125;/&gt;</span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2025/04/01/2025-4-1/",
            "url": "https://queek.cn/2025/04/01/2025-4-1/",
            "title": "25-april-1",
            "date_published": "2025-04-01T11:17:04.000Z",
            "content_html": "<h3 id=\"多条件过滤数组元素-支持数组条件\"><a href=\"#多条件过滤数组元素-支持数组条件\" class=\"headerlink\" title=\"多条件过滤数组元素&amp;&amp;支持数组条件\"></a>多条件过滤数组元素&amp;&amp;支持数组条件</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在自我联调、mock 过程中 ，如果无法安装使用数据库，可以使用这个方法 多条件、单条件 单个字段为数组（多选） 过滤数据，</span><br><span class=\"line\"></span><br><span class=\"line\">然后通过express或python 返回前端。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">queryFilter</span> = (<span class=\"params\">list, query</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> list?.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">ele</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 多条件</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">key</span>(query).<span class=\"title function_\">every</span>(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (query[key] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 当参数为数组 表示选中多个的情况</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> query[key].<span class=\"title function_\">includes</span>(ele[key])</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ele[key] === query[key]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"组件封装的类型\"><a href=\"#组件封装的类型\" class=\"headerlink\" title=\"组件封装的类型\"></a>组件封装的类型</h3><h4 id=\"复用型\"><a href=\"#复用型\" class=\"headerlink\" title=\"复用型\"></a>复用型</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">复用性组件，一般是在多个页面有相同页面样式、逻辑的情况下，考虑封装复用型组件。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"根据页面结构划分\"><a href=\"#根据页面结构划分\" class=\"headerlink\" title=\"根据页面结构划分\"></a>根据页面结构划分</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在拿到需求后，</span><br><span class=\"line\"></span><br><span class=\"line\">我们一般需要对业务模块进行拆分，</span><br><span class=\"line\"></span><br><span class=\"line\">体现在页面上的，</span><br><span class=\"line\"></span><br><span class=\"line\">就是不同的模块。</span><br><span class=\"line\"></span><br><span class=\"line\">比如 头部、中间部分，footer部分。</span><br><span class=\"line\"></span><br><span class=\"line\">在更大的页面中， 还要进行更细的划分，比如 “中间部分” 的页面。</span><br><span class=\"line\"></span><br><span class=\"line\">根据需要，如果某个组件的一个状态值需要在其他兄弟组件使用，</span><br><span class=\"line\"></span><br><span class=\"line\">还要将这个状态 “提升” 到父组件进行维护。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取出对象类型的值类型-组成一个联合类型\"><a href=\"#取出对象类型的值类型-组成一个联合类型\" class=\"headerlink\" title=\"取出对象类型的值类型 组成一个联合类型\"></a>取出对象类型的值类型 组成一个联合类型</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> A = &#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  <span class=\"attr\">b</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">AValueType</span> = A[keyof A] <span class=\"comment\">// string | number</span></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2024/12/09/old-blog/",
            "url": "https://queek.cn/2024/12/09/old-blog/",
            "title": "旧的博客地址",
            "date_published": "2024-12-09T10:19:03.000Z",
            "content_html": "<p>因为 hexo上传到github的是编译后的文件，并不是源文件</p>\n<p>之前的代码丢失无法恢复，所以重新创建了网站</p>\n<p>旧的地址</p>\n<p><a href=\"https://karlfranz.cn/\">https://karlfranz.cn/</a></p>\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2024/10/12/24-october-10th/",
            "url": "https://queek.cn/2024/10/12/24-october-10th/",
            "title": "24-october-10th",
            "date_published": "2024-10-12T08:32:47.000Z",
            "content_html": "<h3 id=\"任务\"><a href=\"#任务\" class=\"headerlink\" title=\"任务\"></a>任务</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">任务分为同步异步任务，</span><br><span class=\"line\"></span><br><span class=\"line\">同步先执行，</span><br><span class=\"line\"></span><br><span class=\"line\">而后执行异步任务，</span><br><span class=\"line\"></span><br><span class=\"line\">异步当中微任务先执行，</span><br><span class=\"line\"></span><br><span class=\"line\">每一个宏任务执行完，会再次查看微任务队列，有的话执行微任务队列。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">await</span> 语句后面的代码会加入微队列。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：<span class=\"keyword\">await</span> 后面的代码如果是一个宏任务，</span><br><span class=\"line\"></span><br><span class=\"line\">那么 <span class=\"keyword\">await</span> 后面要加入微队列的代码会在 <span class=\"keyword\">await</span> 后的宏任务执行完之后再执行，这是 <span class=\"keyword\">await</span> 的特性，会暂停函数中代码的执行，</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">await</span> 修饰的函数 ，会等待 <span class=\"keyword\">await</span> 后面一句的语句执行完，再执行 <span class=\"keyword\">await</span> 语句下一句的微队列代码，即使 <span class=\"keyword\">await</span> 后的语句是异</span><br><span class=\"line\"></span><br><span class=\"line\">步代码，也会等待这个语句中的异步代码完全执行完。</span><br><span class=\"line\"></span><br><span class=\"line\">要注意宏队列、微队列任务在执行过程中 不断添加宏任务、微任务到队列这些任务的执行顺序，执行顺序通常跟添加的顺序有关。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue-hook\"><a href=\"#vue-hook\" class=\"headerlink\" title=\"vue hook\"></a>vue hook</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">useBoolean</span> = (<span class=\"params\">initValue: boolean = <span class=\"literal\">false</span></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> value = <span class=\"title function_\">ref</span>(initValue);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">on</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">off</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">toggle</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = !value.<span class=\"property\">value</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [value, &#123; toggle, on, off &#125;] <span class=\"keyword\">as</span> <span class=\"keyword\">const</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"比当前背景颜色更深的颜色\"><a href=\"#比当前背景颜色更深的颜色\" class=\"headerlink\" title=\"比当前背景颜色更深的颜色\"></a>比当前背景颜色更深的颜色</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需要两层</span><br><span class=\"line\"></span><br><span class=\"line\">一层为当前的颜色</span><br><span class=\"line\"></span><br><span class=\"line\">一层为黑色</span><br><span class=\"line\"></span><br><span class=\"line\">黑色的这一层是包裹层</span><br><span class=\"line\"></span><br><span class=\"line\">这样就能有比当前背景更深一些的颜色</span><br><span class=\"line\"></span><br><span class=\"line\">网易云、汽水音乐的背景 ，</span><br><span class=\"line\"></span><br><span class=\"line\">也是跟这差不多的实现</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img loading=\"lazy\" data-src='https://s3.bmp.ovh/imgs/2024/10/30/5ccc78689055219f.png'></img></p>\n<p><img loading=\"lazy\" data-src='https://s3.bmp.ovh/imgs/2024/10/30/c2dd0a005c6ec80b.png'></img></p>\n",
            "tags": [
                "date"
            ]
        }
    ]
}