{
    "version": "https://jsonfeed.org/version/1",
    "title": "Queek blog",
    "description": "like dream",
    "home_page_url": "https://queek.cn",
    "items": [
        {
            "id": "https://queek.cn/2024/10/12/24-october-10th/",
            "url": "https://queek.cn/2024/10/12/24-october-10th/",
            "title": "24-october-10th",
            "date_published": "2024-10-12T08:32:47.000Z",
            "content_html": "<h3 id=\"任务\"><a href=\"#任务\" class=\"headerlink\" title=\"任务\"></a>任务</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">任务分为同步异步任务，</span><br><span class=\"line\"></span><br><span class=\"line\">同步先执行，</span><br><span class=\"line\"></span><br><span class=\"line\">而后执行异步任务，</span><br><span class=\"line\"></span><br><span class=\"line\">异步当中微任务先执行，</span><br><span class=\"line\"></span><br><span class=\"line\">每一个宏任务执行完，会再次查看微任务队列，有的话执行微任务队列。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">await</span> 语句后面的代码会加入微队列。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：<span class=\"keyword\">await</span> 后面的代码如果是一个宏任务，</span><br><span class=\"line\"></span><br><span class=\"line\">那么 <span class=\"keyword\">await</span> 后面要加入微队列的代码会在 <span class=\"keyword\">await</span> 后的宏任务执行完之后再执行，这是 <span class=\"keyword\">await</span> 的特性，会暂停函数中代码的执行，</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">await</span> 修饰的函数 ，会等待 <span class=\"keyword\">await</span> 后面一句的语句执行完，再执行 <span class=\"keyword\">await</span> 语句下一句的微队列代码，即使 <span class=\"keyword\">await</span> 后的语句是异</span><br><span class=\"line\"></span><br><span class=\"line\">步代码，也会等待这个语句中的异步代码完全执行完。</span><br><span class=\"line\"></span><br><span class=\"line\">要注意宏队列、微队列任务在执行过程中 不断添加宏任务、微任务到队列这些任务的执行顺序，执行顺序通常跟添加的顺序有关。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue-hook\"><a href=\"#vue-hook\" class=\"headerlink\" title=\"vue hook\"></a>vue hook</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">useBoolean</span> = (<span class=\"params\">initValue: boolean = <span class=\"literal\">false</span></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> value = <span class=\"title function_\">ref</span>(initValue);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">on</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">off</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">toggle</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = !value.<span class=\"property\">value</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [value, &#123; toggle, on, off &#125;] <span class=\"keyword\">as</span> <span class=\"keyword\">const</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2024/10/04/new-blog/",
            "url": "https://queek.cn/2024/10/04/new-blog/",
            "title": "new-blog",
            "date_published": "2024-10-04T05:10:28.562Z",
            "content_html": "<p>因为 hexo上传到github的是编译后的文件，并不是源文件</p>\n<p>之前的代码丢失无法恢复，所以重新创建了网站</p>\n<p>旧的地址</p>\n<p><a href=\"https://karlfranz.cn/\">https://karlfranz.cn/</a></p>\n",
            "tags": []
        }
    ]
}