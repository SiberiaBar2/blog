{
    "version": "https://jsonfeed.org/version/1",
    "title": "Queek blog",
    "description": "like dream",
    "home_page_url": "https://queek.cn",
    "items": [
        {
            "id": "https://queek.cn/2025/08/24/2025-08-24-25-August-24/",
            "url": "https://queek.cn/2025/08/24/2025-08-24-25-August-24/",
            "title": "25-August-24",
            "date_published": "2025-08-24T03:41:25.000Z",
            "content_html": "<h3 id=\"ts声明函数类型\"><a href=\"#ts声明函数类型\" class=\"headerlink\" title=\"ts声明函数类型\"></a>ts声明函数类型</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">CbCallback</span> &#123;</span><br><span class=\"line\">  (<span class=\"attr\">cb</span>: <span class=\"function\">() =&gt;</span> <span class=\"built_in\">void</span>): <span class=\"built_in\">void</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">c</span>: <span class=\"title class_\">CbCallback</span> = <span class=\"function\">() =&gt;</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里不传参数或者类型不正确就会报错</span></span><br><span class=\"line\"><span class=\"title function_\">c</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vant-checkboxGroup-组件对于使用对象作为值时的回显\"><a href=\"#vant-checkboxGroup-组件对于使用对象作为值时的回显\" class=\"headerlink\" title=\"vant-checkboxGroup 组件对于使用对象作为值时的回显\"></a>vant-checkboxGroup 组件对于使用对象作为值时的回显</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在移动开发中</span><br><span class=\"line\"></span><br><span class=\"line\">需要对后续复杂操作处理</span><br><span class=\"line\"></span><br><span class=\"line\">这时候设置设置单纯的基本类型值就不够用了</span><br><span class=\"line\"></span><br><span class=\"line\">我们需要将checkboxGroup选择的值设置为对象 </span><br><span class=\"line\"></span><br><span class=\"line\">也就是name为一个对象</span><br><span class=\"line\"></span><br><span class=\"line\">但是后续如果需要回显</span><br><span class=\"line\"></span><br><span class=\"line\">就会发现无法回显了</span><br><span class=\"line\"></span><br><span class=\"line\">这是因为回显的对象引用和渲染列表的对象引用不一致，是两个不同的对象</span><br><span class=\"line\"></span><br><span class=\"line\">因此是无法回显的</span><br><span class=\"line\"></span><br><span class=\"line\">我们需要将要回显的对象引用和整个渲染列其中的对象引用保持一致</span><br><span class=\"line\"></span><br><span class=\"line\">也就是设置的result变量数组中的选中项 </span><br><span class=\"line\"></span><br><span class=\"line\">要和list中对一个的哪一项对象引用一致，就可以正常回显</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;van-checkbox-group v-model=<span class=\"string\">&quot;result&quot;</span> ref=<span class=\"string\">&quot;checkboxGroup&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;a&quot;</span>&gt;</span>复选框 a<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;b&quot;</span>&gt;</span>复选框 b<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;c&quot;</span>&gt;</span>复选框 c<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">&lt;/van-checkbox-group&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;van-checkbox-group v-model=<span class=\"string\">&quot;result&quot;</span> ref=<span class=\"string\">&quot;checkboxGroup&quot;</span>&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">van-checkbox</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;item in list&quot;</span> <span class=\"attr\">:name</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>&#123;&#123;item.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">van-checkbox</span>&gt;</span></span></span><br><span class=\"line\">&lt;/van-checkbox-group&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在watch中监听到变化</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">result</span> = [...<span class=\"variable language_\">this</span>.<span class=\"property\">list</span>, ...<span class=\"variable language_\">this</span>.<span class=\"property\">checkedList</span>]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"react-通过传递不同的key来清空子组件状态\"><a href=\"#react-通过传递不同的key来清空子组件状态\" class=\"headerlink\" title=\"react 通过传递不同的key来清空子组件状态\"></a>react 通过传递不同的key来清空子组件状态</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如何在父组件渲染变化时，清空子组件的状态</span><br><span class=\"line\"></span><br><span class=\"line\">父组件状态更新时候   子组件也会更新  </span><br><span class=\"line\"></span><br><span class=\"line\">虽然会更新，但是子组件不会丢失其已经存在的状态</span><br><span class=\"line\"></span><br><span class=\"line\">那么每次在父组件更新时，</span><br><span class=\"line\"></span><br><span class=\"line\">传递给子组件每次不同的key属性</span><br><span class=\"line\"></span><br><span class=\"line\">子组件就会清空其内部状态（因为是一个全新的组件了）</span><br><span class=\"line\"></span><br><span class=\"line\">这样</span><br><span class=\"line\"></span><br><span class=\"line\">我们就能避免复杂的清空函数</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&lt;<span class=\"title class_\">Child</span> key=&#123;key&#125; userId=&#123;userId&#125; /&gt;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关于何时该使用useEffect\"><a href=\"#关于何时该使用useEffect\" class=\"headerlink\" title=\"关于何时该使用useEffect\"></a>关于何时该使用useEffect</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">尽可能在渲染期间进行计算</span><br><span class=\"line\"></span><br><span class=\"line\">不要链式的在effect中set  然后下一个effect依赖上一个effect中set后的值  这样非常低效</span><br><span class=\"line\"></span><br><span class=\"line\">effect在页面显示 （初次加载时）要执行一些逻辑  这个时候应该使用它</span><br><span class=\"line\"></span><br><span class=\"line\">用户操作的动作导致state发生改变, 这时不应该使用effect监听这个状态 继而 去更新其他状态  这并不合理</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"params\">#</span> 你可能并不需要effect</span><br><span class=\"line\"></span><br><span class=\"line\">https://zh-hans.react.dev/learn/you-might-not-need-an-effect</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"react-useSyncExternalStore-hook\"><a href=\"#react-useSyncExternalStore-hook\" class=\"headerlink\" title=\"react useSyncExternalStore hook\"></a>react useSyncExternalStore hook</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useSyncExternalStore 接收三个函数参数</span><br><span class=\"line\"></span><br><span class=\"line\">第一个是订阅，</span><br><span class=\"line\"></span><br><span class=\"line\">  第一个订阅函数接收一个回调，执行这个回调可以触发react更新渲染，</span><br><span class=\"line\"></span><br><span class=\"line\">  这个订阅函数通常代表订阅了这个hook的组件更新函数，</span><br><span class=\"line\"></span><br><span class=\"line\">   你可以把这个订阅函数看做触发器dispath</span><br><span class=\"line\"></span><br><span class=\"line\">   一般我们在订阅函数用不急于执行触发器，</span><br><span class=\"line\"></span><br><span class=\"line\">   可以把它存储起来，</span><br><span class=\"line\"></span><br><span class=\"line\">   等到其他动作执行需要更新渲染组件的时候，</span><br><span class=\"line\"></span><br><span class=\"line\">   在把存储的所有dispath列表全部执行。</span><br><span class=\"line\"></span><br><span class=\"line\">   如果有多个组件的useSyncExternalStore 的订阅函数和快照函数都出自同一个实例，</span><br><span class=\"line\"></span><br><span class=\"line\">   那么他们将会共享状态，</span><br><span class=\"line\"></span><br><span class=\"line\">   实现另类的react状态数据共享</span><br><span class=\"line\"></span><br><span class=\"line\">第二个是快照，</span><br><span class=\"line\"></span><br><span class=\"line\">第三个是服务端渲染的快照，第二个和第三个返回的快照的内容必须相同</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用useSyncExternalStore的状态共享\"><a href=\"#使用useSyncExternalStore的状态共享\" class=\"headerlink\" title=\"使用useSyncExternalStore的状态共享\"></a>使用useSyncExternalStore的状态共享</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> cbs = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">useStorage</span> = (<span class=\"params\">key, initValue</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">//订阅者</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">subscribe</span> = (<span class=\"params\">cb</span>) =&gt; &#123;</span><br><span class=\"line\">    cbs = [...cbs, cb];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      cbs = cbs.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">l</span> =&gt;</span> l !== cb);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">emitChange</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> cb <span class=\"keyword\">of</span> cbs) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">cb</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//返回当前快照</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">getSnapshot</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(key) ? <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(key)) : initValue</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">updateStorage</span> = (<span class=\"params\">value</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(key, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(value))</span><br><span class=\"line\">    <span class=\"comment\">//手动触发Storage的事件 </span></span><br><span class=\"line\">    <span class=\"comment\">// window.dispatchEvent(new StorageEvent(&#x27;storage&#x27;))</span></span><br><span class=\"line\">    <span class=\"title function_\">emitChange</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = <span class=\"title function_\">useSyncExternalStore</span>(subscribe, getSnapshot)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [res, updateStorage]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> [count1, setCount1] = <span class=\"title function_\">useStorage</span>(<span class=\"string\">&#x27;count1&#x27;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (</span><br><span class=\"line\">  &lt;div className=&quot;container mx-auto px-4 py-8 max-w-3xl&quot;&gt;</span><br><span class=\"line\">    &lt;header className=&quot;mb-8 text-center&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        count</span><br><span class=\"line\">        &lt;span&gt;</span><br><span class=\"line\">          &#123;count1&#125;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;() =&gt; setCount1(count1 + 1)&#125;&gt;新增&lt;/button&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;() =&gt; setCount1(count1 - 1)&#125;&gt;减少&lt;/button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue模版中的“解构赋值”\"><a href=\"#vue模版中的“解构赋值”\" class=\"headerlink\" title=\"vue模版中的“解构赋值”\"></a>vue模版中的“解构赋值”</h3><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过下面这种绑定一个动态对象的方式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将所有属性给到组件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 等同于 react 当中的 </span></span><br><span class=\"line\"><span class=\"comment\">// react</span></span><br><span class=\"line\">&lt;<span class=\"title class_\">Child</span>  &#123;...props&#125;/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vue</span></span><br><span class=\"line\"><span class=\"comment\">// 如果接受的组件内部已经定义了这些同名属性，传入的属性将无法覆盖，</span></span><br><span class=\"line\"><span class=\"comment\">// 考虑使用计算属性合并新旧属性值</span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Popup</span> </span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">...</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">..</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">.</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">:pageConfig</span>=<span class=\"string\">&quot;&#123;round: false, closeable: true&#125;&quot;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">/&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加一个微任务\"><a href=\"#添加一个微任务\" class=\"headerlink\" title=\"添加一个微任务\"></a>添加一个微任务</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">addMicrotask</span>(<span class=\"params\">callback</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> queueMicrotask === <span class=\"string\">&quot;function&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">queueMicrotask</span>(callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">    <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(callback)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关于react组件拆分时的状态控制\"><a href=\"#关于react组件拆分时的状态控制\" class=\"headerlink\" title=\"关于react组件拆分时的状态控制\"></a>关于react组件拆分时的状态控制</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如果父组件有多个子组件，</span><br><span class=\"line\"></span><br><span class=\"line\">子组件需要根据父组件的状态来更新自身，</span><br><span class=\"line\"></span><br><span class=\"line\">这种情况下，</span><br><span class=\"line\"></span><br><span class=\"line\">应该把父组件传递给子组件的属性统一放到一个对象中维护，</span><br><span class=\"line\"></span><br><span class=\"line\">这样不管什么状态发生变化，</span><br><span class=\"line\"></span><br><span class=\"line\">都只更新这个对象，</span><br><span class=\"line\"></span><br><span class=\"line\">不会带来多次的重复渲染，</span><br><span class=\"line\"></span><br><span class=\"line\">带来性能问题。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2025/05/24/2025-05-24-may24th/",
            "url": "https://queek.cn/2025/05/24/2025-05-24-may24th/",
            "title": "may24th",
            "date_published": "2025-05-24T07:04:50.000Z",
            "content_html": "<h3 id=\"获取当前时间所对应的周一\"><a href=\"#获取当前时间所对应的周一\" class=\"headerlink\" title=\"获取当前时间所对应的周一\"></a>获取当前时间所对应的周一</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dayjs 和 moment 能够正确处理跨年跨月以及夏令时，符合iso标准</span><br><span class=\"line\"></span><br><span class=\"line\">utc时间从开始时间的 00:00:00 开始 ，结束时间从 23:59:59结束。</span><br><span class=\"line\"></span><br><span class=\"line\">在比较时间戳大小的时候要注意：</span><br><span class=\"line\"></span><br><span class=\"line\">  new Date(&#x27;2025-09-20&#x27;) 默认会被转为utc时间，</span><br><span class=\"line\">  </span><br><span class=\"line\">  new Date(&#x27;2025-09-20&#x27;)的时间戳和new Date() （即使现在是2025-09-20，这种写法也和utc对不上）的时间戳会不一致</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"原生\"><a href=\"#原生\" class=\"headerlink\" title=\"原生\"></a>原生</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getUTCWeekRange</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 基于 UTC 的星期计算（0=周日，1=周一...6=周六）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> utcDay = now.<span class=\"title function_\">getUTCDay</span>(); </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 计算到 UTC 周一的天数差</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> mondayDiff = utcDay === <span class=\"number\">0</span> ? <span class=\"number\">6</span> : utcDay - <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 计算到 UTC 周日的天数差（如果是周日则无需调整）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> sundayDiff = utcDay === <span class=\"number\">0</span> ? <span class=\"number\">0</span> : <span class=\"number\">7</span> - utcDay;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 构建 UTC 周一</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> utcMonday = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">UTC</span>(</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCFullYear</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCMonth</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCDate</span>() - mondayDiff</span><br><span class=\"line\">  ));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 构建 UTC 周日</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> utcSunday = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">UTC</span>(</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCFullYear</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCMonth</span>(),</span><br><span class=\"line\">    now.<span class=\"title function_\">getUTCDate</span>() + sundayDiff</span><br><span class=\"line\">  ));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; utcMonday, utcSunday &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"dayjs\"><a href=\"#dayjs\" class=\"headerlink\" title=\"dayjs\"></a>dayjs</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> dayjs <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> utc <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs/plugin/utc&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> isoWeek <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs/plugin/isoWeek&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> timezone <span class=\"keyword\">from</span> <span class=\"string\">&#x27;dayjs/plugin/timezone&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">dayjs.<span class=\"title function_\">extend</span>(utc);</span><br><span class=\"line\">dayjs.<span class=\"title function_\">extend</span>(isoWeek);</span><br><span class=\"line\">dayjs.<span class=\"title function_\">extend</span>(timezone);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取UTC标准周范围（周一00:00:00至周日23:59:59.999）</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string|Date</span>&#125; [date] - 可选的日期输入，默认当前时间</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns</span> &#123;<span class=\"type\">&#123;</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   start: Date,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   end: Date,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   isoWeekNumber: number,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   isoYear: number,</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> *   isoRange: string</span></span></span><br><span class=\"line\"><span class=\"type\"><span class=\"comment\"> * </span>&#125;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getEnhancedUTCWeekRange</span>(<span class=\"params\">date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> base = <span class=\"title function_\">dayjs</span>(date).<span class=\"title function_\">utc</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 计算ISO标准周起始日（周一）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> start = base.<span class=\"title function_\">startOf</span>(<span class=\"string\">&#x27;isoWeek&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 计算周结束日（周日）并设置到当日最后一毫秒</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> end = start.<span class=\"title function_\">clone</span>().<span class=\"title function_\">endOf</span>(<span class=\"string\">&#x27;day&#x27;</span>).<span class=\"title function_\">add</span>(<span class=\"number\">6</span>, <span class=\"string\">&#x27;day&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">start</span>: start.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">end</span>: end.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoWeekNumber</span>: base.<span class=\"title function_\">isoWeek</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoYear</span>: base.<span class=\"title function_\">isoWeekYear</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoRange</span>: <span class=\"string\">`<span class=\"subst\">$&#123;start.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>/<span class=\"subst\">$&#123;end.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>`</span>,</span><br><span class=\"line\">    <span class=\"attr\">days</span>: <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: <span class=\"number\">7</span> &#125;, <span class=\"function\">(<span class=\"params\">_, i</span>) =&gt;</span> </span><br><span class=\"line\">      start.<span class=\"title function_\">add</span>(i, <span class=\"string\">&#x27;day&#x27;</span>).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getEnhancedUTCWeekRange</span>(<span class=\"params\">date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> base = <span class=\"title function_\">moment</span>(date).<span class=\"title function_\">utc</span>();</span><br><span class=\"line\">  <span class=\"comment\">// 计算ISO标准周起始日（周一）</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> start = base.<span class=\"title function_\">clone</span>().<span class=\"title function_\">startOf</span>(<span class=\"string\">&#x27;isoWeek&#x27;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 计算周结束日（周日）并设置到当日最后一毫秒</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> end = start.<span class=\"title function_\">clone</span>().<span class=\"title function_\">endOf</span>(<span class=\"string\">&#x27;day&#x27;</span>).<span class=\"title function_\">add</span>(<span class=\"number\">6</span>, <span class=\"string\">&#x27;day&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">start</span>: start.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">end</span>: end.<span class=\"title function_\">toDate</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoWeekNumber</span>: base.<span class=\"title function_\">isoWeek</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoYear</span>: base.<span class=\"title function_\">isoWeekYear</span>(),</span><br><span class=\"line\">    <span class=\"attr\">isoRange</span>: <span class=\"string\">`<span class=\"subst\">$&#123;start.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>/<span class=\"subst\">$&#123;end.format(<span class=\"string\">&#x27;YYYY-MM-DDTHH:mm:ss.SSS[Z]&#x27;</span>)&#125;</span>`</span>,</span><br><span class=\"line\">    <span class=\"attr\">days</span>: <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(&#123; <span class=\"attr\">length</span>: <span class=\"number\">7</span> &#125;, <span class=\"function\">(<span class=\"params\">_, i</span>) =&gt;</span> </span><br><span class=\"line\">      start.<span class=\"title function_\">clone</span>().<span class=\"title function_\">add</span>(i, <span class=\"string\">&#x27;days&#x27;</span>).<span class=\"title function_\">format</span>(<span class=\"string\">&#x27;YYYY-MM-DD&#x27;</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"点击事件、onChange事件防抖\"><a href=\"#点击事件、onChange事件防抖\" class=\"headerlink\" title=\"点击事件、onChange事件防抖\"></a>点击事件、onChange事件防抖</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们都知道 ，</span><br><span class=\"line\"></span><br><span class=\"line\">不能直接对高频的onChange事件加上防抖，</span><br><span class=\"line\"></span><br><span class=\"line\">直接加上会使输入卡顿。</span><br><span class=\"line\"></span><br><span class=\"line\">因此 ，我们可以对onChange之后要做的事进行防抖。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// setTab是外界传入 间接的对引发高频请求的变量防抖</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> debounced = <span class=\"title function_\">debounce</span>(<span class=\"function\">(<span class=\"params\"><span class=\"attr\">tab</span>: <span class=\"built_in\">string</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setTab</span>(tab)</span><br><span class=\"line\">&#125;, <span class=\"number\">800</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"title class_\">Input</span> onChange=&#123;<span class=\"function\">(<span class=\"params\">tab</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">debounced</span>(tab)</span><br><span class=\"line\">&#125;&#125;/&gt;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"需要保持一个防抖实例的情况\"><a href=\"#需要保持一个防抖实例的情况\" class=\"headerlink\" title=\"需要保持一个防抖实例的情况\"></a>需要保持一个防抖实例的情况</h5><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果在onChange的时候会引起组件重渲染，需要保持一个防抖实例 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以下两种写法皆可</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> debounced = <span class=\"title function_\">useCallback</span>(<span class=\"title function_\">debounce</span>(<span class=\"function\">(<span class=\"params\"><span class=\"attr\">tab</span>: <span class=\"built_in\">string</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setTab</span>(tab)</span><br><span class=\"line\">&#125;, <span class=\"number\">800</span>), [])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> debounceRef = <span class=\"title function_\">useRef</span>(<span class=\"title function_\">debounce</span>(<span class=\"function\">(<span class=\"params\"><span class=\"attr\">tab</span>: <span class=\"built_in\">string</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setTab</span>(tab)</span><br><span class=\"line\">&#125;, <span class=\"number\">800</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"title class_\">Input</span> onChange=&#123;<span class=\"function\">(<span class=\"params\">tab</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">debounced</span>(tab)</span><br><span class=\"line\">    <span class=\"title function_\">debounceRef</span>(tab)</span><br><span class=\"line\">&#125;&#125;/&gt;</span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2025/04/28/2025-04-28-django%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/",
            "url": "https://queek.cn/2025/04/28/2025-04-28-django%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB/",
            "title": "django项目启动和数据库迁移",
            "date_published": "2025-04-28T02:37:50.000Z",
            "content_html": "<h3 id=\"启动Django\"><a href=\"#启动Django\" class=\"headerlink\" title=\"启动Django\"></a>启动Django</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生成数据库迁移文件\"><a href=\"#生成数据库迁移文件\" class=\"headerlink\" title=\"生成数据库迁移文件\"></a>生成数据库迁移文件</h3><h4 id=\"数据库迁移文件的作用\"><a href=\"#数据库迁移文件的作用\" class=\"headerlink\" title=\"数据库迁移文件的作用\"></a>数据库迁移文件的作用</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为什么需要数据库迁移文件？</span><br><span class=\"line\"></span><br><span class=\"line\">1.版本控制数据库模式</span><br><span class=\"line\">数据库结构变更（如表、字段、索引的增删改），都会生成一个新的迁移文件来记录这次变更，团队成员可以轻松的追踪每次更改。</span><br><span class=\"line\"></span><br><span class=\"line\">2.保持开发环境与生产环境一致</span><br><span class=\"line\">迁移文件可以帮助你在生产数据库中应用相同的结构更改，从而避免手动修改数据库带来的风险。</span><br><span class=\"line\"></span><br><span class=\"line\">3.支持数据库回滚</span><br><span class=\"line\">允许回退到任意历史版本的数据库结构。</span><br><span class=\"line\">python manage.py migrate app<span class=\"built_in\">_</span>name 0001  <span class=\"params\">#</span> 回退到 0001 版本</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py makemigrations cart</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"应用迁移文件到数据库-（保证迁移文件和数据库完全一致）\"><a href=\"#应用迁移文件到数据库-（保证迁移文件和数据库完全一致）\" class=\"headerlink\" title=\"应用迁移文件到数据库 （保证迁移文件和数据库完全一致）\"></a>应用迁移文件到数据库 （保证迁移文件和数据库完全一致）</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"params\">#</span> 可能会生成大量无用表 不适合大型项目</span><br><span class=\"line\"></span><br><span class=\"line\">python manage.py migrate</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看应用状态\"><a href=\"#查看应用状态\" class=\"headerlink\" title=\"查看应用状态\"></a>查看应用状态</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py showmigrations</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"根据数据库表结构-生成模型代码\"><a href=\"#根据数据库表结构-生成模型代码\" class=\"headerlink\" title=\"根据数据库表结构  生成模型代码\"></a>根据数据库表结构  生成模型代码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将新创建的表结构导入代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">python manage.py inspectdb --database default goods &gt; apps/goods/models.py </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; 追加</span><br><span class=\"line\"> python manage.py inspectdb --database default user&gt;&gt; apps/goods/models.py</span><br></pre></td></tr></table></figure>\n\n",
            "tags": []
        },
        {
            "id": "https://queek.cn/2025/04/28/2025-04-28-react-custom-hook-four/",
            "url": "https://queek.cn/2025/04/28/2025-04-28-react-custom-hook-four/",
            "title": "react-custom-hook-four",
            "date_published": "2025-04-28T01:22:08.000Z",
            "content_html": "<h3 id=\"useIsFirstRender\"><a href=\"#useIsFirstRender\" class=\"headerlink\" title=\"useIsFirstRender\"></a>useIsFirstRender</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这个hook 会在首次渲染的时候返回一个为true的布尔值 </span><br><span class=\"line\"></span><br><span class=\"line\">为什么需要这个hook？</span><br><span class=\"line\"></span><br><span class=\"line\">我们常常在组件首次渲染的时候需要执行一些方法 ，或者是首次指定默认值，（在一些组件中指定默认值失效的情况下会非常有用）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">useIsFirstRender</span> = (<span class=\"params\"><span class=\"attr\">deps</span>: [] <span class=\"keyword\">as</span> <span class=\"built_in\">unknown</span>[], <span class=\"attr\">noDeps</span>: [] <span class=\"keyword\">as</span> <span class=\"built_in\">unknown</span>[]</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> isFirstRender = <span class=\"title function_\">useRef</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * </span></span><br><span class=\"line\"><span class=\"comment\">  * 为什么需要指定依赖项？</span></span><br><span class=\"line\"><span class=\"comment\">  * </span></span><br><span class=\"line\"><span class=\"comment\">  * 页面首次渲染可能会更新多次 多个状态或props的先后更新会导致 即便是首次加载页面 组件也会多次更新</span></span><br><span class=\"line\"><span class=\"comment\">  *  </span></span><br><span class=\"line\"><span class=\"comment\">  * 这将会导致我们的hook记录失效！ß</span></span><br><span class=\"line\"><span class=\"comment\">  *  </span></span><br><span class=\"line\"><span class=\"comment\">  * 因此 只在我们指定的状态更新才开始计数。</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    isFirstRender.<span class=\"property\">current</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;,[...deps])</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 在有些状态变化的情况下</span></span><br><span class=\"line\"><span class=\"comment\">  *</span></span><br><span class=\"line\"><span class=\"comment\">\t* 我们依然希望使用默认的初始值，这个时候你应该指定这些变量，来在他们更新时，返回true来保证使用的仍然是初始值</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    isFirstRender.<span class=\"property\">current</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;,[...noDeps])</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\tisFirstRender.<span class=\"property\">current</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      sFirstRender.<span class=\"property\">current</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,[])</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">isFirstRender</span>: isFirstRender.<span class=\"property\">current</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"useDepsNoRender\"><a href=\"#useDepsNoRender\" class=\"headerlink\" title=\"useDepsNoRender\"></a>useDepsNoRender</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如你所见</span><br><span class=\"line\"></span><br><span class=\"line\">当状态更新时，不执行回调的hook。</span><br><span class=\"line\"></span><br><span class=\"line\">为什么需要这个hook?</span><br><span class=\"line\"></span><br><span class=\"line\">因为组件的bug，我们在回显时不能回填数据（数据会丢失，即便你赋值前值是全量的），</span><br><span class=\"line\"></span><br><span class=\"line\">需要多次更新才能正常回显，</span><br><span class=\"line\"></span><br><span class=\"line\">因此在页面首次加载时，通过多次渲染回填数据。</span><br><span class=\"line\"></span><br><span class=\"line\">首次渲染即使依赖更新了，我们依然执行回调，来完成数据回显。</span><br><span class=\"line\"></span><br><span class=\"line\">而在后续的渲染中（数据已经正常回填，组件中其他状态发生了改变，导致组件渲染此时不会执行回调，</span><br><span class=\"line\"></span><br><span class=\"line\">前提是你把导致组件渲染的状态写入了这个hook的依赖）</span><br><span class=\"line\"></span><br><span class=\"line\">他是一个数据回填但数据丢失，</span><br><span class=\"line\"></span><br><span class=\"line\">你需要在首次加载回显数据，而后续不再执行的一个hook。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">useDepsNoRender</span> = (<span class=\"params\"><span class=\"attr\">callback</span>: () =&gt; <span class=\"built_in\">void</span>, <span class=\"attr\">deps</span>: <span class=\"built_in\">unknown</span>[], firstRender = <span class=\"literal\">true</span></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> isUpdate = <span class=\"title function_\">useRef</span>(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; isFirstRender &#125; = <span class=\"title function_\">useIsFirstRender</span>(deps)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    isUpdate.<span class=\"property\">current</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    isUpdate.<span class=\"property\">current</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;, [...deps])</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (firstRender &amp;&amp; isFirstRender) &#123;</span><br><span class=\"line\">      isUpdate.<span class=\"property\">current</span> = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, [firstRender, isFirstRender])</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(isUpdate.<span class=\"property\">current</span>) callback?.()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"usePerformanceModel\"><a href=\"#usePerformanceModel\" class=\"headerlink\" title=\"usePerformanceModel\"></a>usePerformanceModel</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">简化umi useModel 的取值 有类型提示</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; useModel &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;umi&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">// Parameters 利用提取 useModel 第一个参数，来取到所有的 ModelName</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">ModelNames</span> = <span class=\"title class_\">Parameters</span>&lt;<span class=\"keyword\">typeof</span> useModel&gt;[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"comment\">// 根据指定的 ModelName 来拿到 useModel 的返回值（对应的 model state）</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">ModelState</span>&lt;N <span class=\"keyword\">extends</span> <span class=\"title class_\">ModelNames</span>&gt; = <span class=\"title class_\">ReturnType</span>&lt;<span class=\"keyword\">typeof</span> useModel&lt;N&gt;&gt;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> usePerformanceModel = &lt;N <span class=\"keyword\">extends</span> <span class=\"title class_\">ModelNames</span>, K <span class=\"keyword\">extends</span> keyof <span class=\"title class_\">ModelState</span>&lt;N&gt;&gt;<span class=\"function\">(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"attr\">modelName</span>: N,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  <span class=\"attr\">keys</span>: K[]</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\"></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">useModel</span>(modelName, <span class=\"function\">(<span class=\"params\">state</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> keys.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">prev, key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (prev[key]) <span class=\"keyword\">return</span> prev;</span><br><span class=\"line\">      prev[key] = state[key];</span><br><span class=\"line\">      <span class=\"keyword\">return</span> prev;</span><br><span class=\"line\">    &#125;, &#123;&#125; <span class=\"keyword\">as</span> <span class=\"title class_\">Pick</span>&lt;<span class=\"title class_\">ModelState</span>&lt;N&gt;, K&gt;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "reacthook"
            ]
        },
        {
            "id": "https://queek.cn/2025/04/01/2025-4-1/",
            "url": "https://queek.cn/2025/04/01/2025-4-1/",
            "title": "25-april-1",
            "date_published": "2025-04-01T11:17:04.000Z",
            "content_html": "<h3 id=\"多条件过滤数组元素-支持数组条件\"><a href=\"#多条件过滤数组元素-支持数组条件\" class=\"headerlink\" title=\"多条件过滤数组元素&amp;&amp;支持数组条件\"></a>多条件过滤数组元素&amp;&amp;支持数组条件</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在自我联调、mock 过程中 ，如果无法安装使用数据库，可以使用这个方法 多条件、单条件 单个字段为数组（多选） 过滤数据，</span><br><span class=\"line\"></span><br><span class=\"line\">然后通过express或python 返回前端。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">queryFilter</span> = (<span class=\"params\">list, query</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> list?.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">ele</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 多条件</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">key</span>(query).<span class=\"title function_\">every</span>(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (query[key] <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Array</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 当参数为数组 表示选中多个的情况</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> query[key].<span class=\"title function_\">includes</span>(ele[key])</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ele[key] === query[key]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"组件封装的类型\"><a href=\"#组件封装的类型\" class=\"headerlink\" title=\"组件封装的类型\"></a>组件封装的类型</h3><h4 id=\"复用型\"><a href=\"#复用型\" class=\"headerlink\" title=\"复用型\"></a>复用型</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">复用性组件，一般是在多个页面有相同页面样式、逻辑的情况下，考虑封装复用型组件。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"根据页面结构划分\"><a href=\"#根据页面结构划分\" class=\"headerlink\" title=\"根据页面结构划分\"></a>根据页面结构划分</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在拿到需求后，</span><br><span class=\"line\"></span><br><span class=\"line\">我们一般需要对业务模块进行拆分，</span><br><span class=\"line\"></span><br><span class=\"line\">体现在页面上的，</span><br><span class=\"line\"></span><br><span class=\"line\">就是不同的模块。</span><br><span class=\"line\"></span><br><span class=\"line\">比如 头部、中间部分，footer部分。</span><br><span class=\"line\"></span><br><span class=\"line\">在更大的页面中， 还要进行更细的划分，比如 “中间部分” 的页面。</span><br><span class=\"line\"></span><br><span class=\"line\">根据需要，如果某个组件的一个状态值需要在其他兄弟组件使用，</span><br><span class=\"line\"></span><br><span class=\"line\">还要将这个状态 “提升” 到父组件进行维护。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取出对象类型的值类型-组成一个联合类型\"><a href=\"#取出对象类型的值类型-组成一个联合类型\" class=\"headerlink\" title=\"取出对象类型的值类型 组成一个联合类型\"></a>取出对象类型的值类型 组成一个联合类型</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> A = &#123;</span><br><span class=\"line\">  <span class=\"attr\">a</span>: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  <span class=\"attr\">b</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">AValueType</span> = A[keyof A] <span class=\"comment\">// string | number</span></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2025/02/17/xlsx%E4%BF%AE%E6%94%B9%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6/",
            "url": "https://queek.cn/2025/02/17/xlsx%E4%BF%AE%E6%94%B9%E5%8A%A0%E5%AF%86%E6%96%87%E4%BB%B6/",
            "title": "xlsx修改加密文件",
            "date_published": "2025-02-17T11:04:45.000Z",
            "content_html": "<h3 id=\"xlsx解密修改文件内容并重新加密下载\"><a href=\"#xlsx解密修改文件内容并重新加密下载\" class=\"headerlink\" title=\"xlsx解密修改文件内容并重新加密下载\"></a>xlsx解密修改文件内容并重新加密下载</h3><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">ZipReader</span>,</span><br><span class=\"line\">    <span class=\"title class_\">BlobReader</span>,</span><br><span class=\"line\">    <span class=\"title class_\">TextWriter</span>,</span><br><span class=\"line\">    <span class=\"title class_\">ZipWriter</span>,</span><br><span class=\"line\">    <span class=\"title class_\">BlobWriter</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@zip.js/zip.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"variable constant_\">XLSX</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;xlsx&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">KeepZero</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> getKeepZeroXlsx = <span class=\"function\">(<span class=\"params\">blob, password, path</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">extractAndDecryptXlsx</span>(blob, password, path).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">zipContent</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (zipContent) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;解密成功，文件已经处理&#x27;</span>, zipContent);</span><br><span class=\"line\">                <span class=\"keyword\">const</span> xlsxBlob = <span class=\"variable language_\">this</span>.<span class=\"title function_\">convertToXLSX</span>(zipContent);</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;xlsxBlob&#x27;</span>, xlsxBlob);</span><br><span class=\"line\">                <span class=\"comment\">// this.readAndPrintXLSX(xlsxBlob);</span></span><br><span class=\"line\">                <span class=\"keyword\">const</span> nowBolb = <span class=\"variable language_\">this</span>.<span class=\"title function_\">encryptAndDownload</span>(xlsxBlob, password, path);</span><br><span class=\"line\">                <span class=\"comment\">// console.log(&#x27;nowBolb&#x27;, nowBolb);</span></span><br><span class=\"line\">                <span class=\"comment\">// 你可以在这里进一步操作解压后的文件内容</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 解压 ZIP，提取并解密 .xlsx 文件</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> extractAndDecryptXlsx = <span class=\"title function_\">async</span> (blob, password, path) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建 ZipReader 实例，提供密码</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">ZipReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">BlobReader</span>(blob), &#123; password &#125;);</span><br><span class=\"line\">            <span class=\"comment\">// 获取文件条目</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> entries = <span class=\"keyword\">await</span> reader.<span class=\"title function_\">getEntries</span>();</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (entries.<span class=\"property\">length</span> === <span class=\"number\">1</span> &amp;&amp; !entries[<span class=\"number\">0</span>].<span class=\"property\">directory</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 读取文件内容为文本</span></span><br><span class=\"line\">                <span class=\"keyword\">const</span> content = <span class=\"keyword\">await</span> entries[<span class=\"number\">0</span>].<span class=\"property\">getData</span>?.(<span class=\"keyword\">new</span> <span class=\"title class_\">TextWriter</span>());</span><br><span class=\"line\">                <span class=\"comment\">// 关闭读取器</span></span><br><span class=\"line\">                <span class=\"keyword\">await</span> reader.<span class=\"title function_\">close</span>();</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123; <span class=\"attr\">filename</span>: path, content &#125;; <span class=\"comment\">// 返回文件名和内容</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;ZIP 文件包含多个文件或没有文件&#x27;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;解密失败:&#x27;</span>, err);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> convertToXLSX = <span class=\"function\">(<span class=\"params\">fileContent</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;XLSX?.utils&#x27;</span>, <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个新的工作簿</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">book_new</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 假设内容是 CSV 格式，按逗号分隔每行</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> csvData = fileContent.<span class=\"property\">content</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;\\n&#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">line</span> =&gt;</span> line.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>));</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个工作表</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> worksheet = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">aoa_to_sheet</span>(csvData);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 遍历工作表数据，强制将某些列作为文本处理以保留前导零</span></span><br><span class=\"line\">        <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(worksheet).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">cellAddress</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> cell = worksheet[cellAddress];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cell &amp;&amp; <span class=\"keyword\">typeof</span> cell.<span class=\"property\">v</span> === <span class=\"string\">&#x27;string&#x27;</span> &amp;&amp; <span class=\"regexp\">/^[0-9]+$/</span>.<span class=\"title function_\">test</span>(cell.<span class=\"property\">v</span>)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 如果单元格的值是纯数字字符串，则设置为文本格式</span></span><br><span class=\"line\">                cell.<span class=\"property\">z</span> = <span class=\"string\">&#x27;@&#x27;</span>; <span class=\"comment\">// 设置单元格为文本格式</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 将工作表添加到工作簿</span></span><br><span class=\"line\">        <span class=\"variable constant_\">XLSX</span>?.<span class=\"property\">utils</span>?.<span class=\"title function_\">book_append_sheet</span>(workbook, worksheet, <span class=\"string\">&#x27;Sheet1&#x27;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 导出为 XLSX 文件</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> xlsxArray = <span class=\"variable constant_\">XLSX</span>?.<span class=\"property\">write</span>?.(workbook, &#123; <span class=\"attr\">bookType</span>: <span class=\"string\">&#x27;xlsx&#x27;</span>, <span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span> &#125;);</span><br><span class=\"line\">        <span class=\"comment\">// 使用 Blob 构造函数将数组转换为 Blob</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> xlsxBlob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([xlsxArray], &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#x27;</span> &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> xlsxBlob; <span class=\"comment\">// 返回生成的 Blob 对象</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 读取生成的 XLSX 文件并打印内容</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> readAndPrintXLSX = <span class=\"function\">(<span class=\"params\">xlsxBlob</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 FileReader 实例读取 Blob</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>();</span><br><span class=\"line\">        reader.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> data = <span class=\"keyword\">new</span> <span class=\"title class_\">Uint8Array</span>(e.<span class=\"property\">target</span>.<span class=\"property\">result</span>);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> workbook = <span class=\"variable constant_\">XLSX</span>.<span class=\"title function_\">read</span>(data, &#123; <span class=\"attr\">type</span>: <span class=\"string\">&#x27;array&#x27;</span> &#125;);</span><br><span class=\"line\">            <span class=\"comment\">// 获取第一个工作表</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> firstSheetName = workbook.<span class=\"property\">SheetNames</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">            <span class=\"keyword\">const</span> worksheet = workbook.<span class=\"property\">Sheets</span>[firstSheetName];</span><br><span class=\"line\">            <span class=\"comment\">// 将工作表内容转换为 JSON 格式</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> sheetData = <span class=\"variable constant_\">XLSX</span>.<span class=\"property\">utils</span>.<span class=\"title function_\">sheet_to_json</span>(worksheet, &#123; <span class=\"attr\">header</span>: <span class=\"number\">1</span> &#125;);</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;打印 XLSX 内容:&#x27;</span>, sheetData); <span class=\"comment\">// 打印内容</span></span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        reader.<span class=\"title function_\">readAsArrayBuffer</span>(xlsxBlob);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用 @zip.js/zip.js 加密生成的 XLSX 文件并下载</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> encryptAndDownload = <span class=\"title function_\">async</span> (xlsxBlob, password, path) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建 ZipWriter 实例</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> zipWriter = <span class=\"keyword\">new</span> <span class=\"title class_\">ZipWriter</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">BlobWriter</span>(<span class=\"string\">&#x27;application/zip&#x27;</span>), &#123; password &#125;);</span><br><span class=\"line\">            <span class=\"comment\">// 将 XLSX 文件添加到 ZIP 包中</span></span><br><span class=\"line\">            <span class=\"keyword\">await</span> zipWriter.<span class=\"title function_\">add</span>(<span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>.xlsx`</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">BlobReader</span>(xlsxBlob));</span><br><span class=\"line\">            <span class=\"comment\">// 关闭并获取加密后的 ZIP Blob</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> encryptedZipBlob = <span class=\"keyword\">await</span> zipWriter.<span class=\"title function_\">close</span>();</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 创建下载链接</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> url = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(encryptedZipBlob);</span><br><span class=\"line\">            <span class=\"keyword\">const</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">            a.<span class=\"property\">href</span> = url;</span><br><span class=\"line\">            a.<span class=\"property\">download</span> = <span class=\"string\">`<span class=\"subst\">$&#123;path || <span class=\"string\">&#x27;&#x27;</span>&#125;</span>.zip`</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(a);</span><br><span class=\"line\">            a.<span class=\"title function_\">click</span>();</span><br><span class=\"line\">            <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(a);</span><br><span class=\"line\">            <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">revokeObjectURL</span>(url); <span class=\"comment\">// 释放 URL</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;加密失败:&#x27;</span>, err);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实例化类并调用方法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> keepZero = <span class=\"keyword\">new</span> <span class=\"title class_\">KeepZero</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> name = action.<span class=\"property\">payload</span>.<span class=\"property\">excelName</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> realName = name.<span class=\"title function_\">slice</span>(-<span class=\"number\">4</span>) === <span class=\"string\">&#x27;.zip&#x27;</span> ? name.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>, name.<span class=\"property\">length</span> - <span class=\"number\">4</span>) : name;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;realName&#x27;</span>, realName);</span><br><span class=\"line\">keepZero.<span class=\"title function_\">getKeepZeroXlsx</span>(res.<span class=\"property\">data</span>, <span class=\"string\">&#x27;123455&#x27;</span>, realName);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "xlsx"
            ]
        },
        {
            "id": "https://queek.cn/2025/02/13/linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/",
            "url": "https://queek.cn/2025/02/13/linux%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/",
            "title": "linux基础操作命令",
            "date_published": "2025-02-13T11:54:44.000Z",
            "content_html": "<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看文件、文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看文件详情</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示所有文件（包括隐藏文件）</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以人类可读的格式显示文件和目录的大小</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -h</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通常与l配合使用</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -lh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 组合使用</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -lha</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看包含隐藏文件、系统文件</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> ./*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除所有 </span></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf ./*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前所在的绝对路径</span></span><br><span class=\"line\"><span class=\"built_in\">pwd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建文件 若文件存在 则访问时间和修改时间更新为当前时间</span></span><br><span class=\"line\"><span class=\"built_in\">touch</span> example.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加文件权限 </span></span><br><span class=\"line\"><span class=\"comment\">#-R：递归地更改目录及其所有子目录和文件的权限。</span></span><br><span class=\"line\"><span class=\"comment\"># 775：设置权限为 775，其中：</span></span><br><span class=\"line\"><span class=\"comment\"># 7（所有者）：读、写、执行权限（rwx）。</span></span><br><span class=\"line\"><span class=\"comment\"># 7（所属组）：读、写、执行权限（rwx）。</span></span><br><span class=\"line\"><span class=\"comment\"># 5（其他用户）：读和执行权限（r-x）。</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chmod</span> -R 775 /home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更改所有者</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chown</span> -R lighthouse:lighthouse /home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "linux"
            ]
        },
        {
            "id": "https://queek.cn/2025/01/11/linux%E9%83%A8%E7%BD%B2%E5%89%8D%E5%90%8E%E7%AB%AF/",
            "url": "https://queek.cn/2025/01/11/linux%E9%83%A8%E7%BD%B2%E5%89%8D%E5%90%8E%E7%AB%AF/",
            "title": "linux部署前后端",
            "date_published": "2025-01-11T15:14:04.000Z",
            "content_html": "<h3 id=\"部署后端\"><a href=\"#部署后端\" class=\"headerlink\" title=\"部署后端\"></a>部署后端</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前言：</span><br><span class=\"line\"></span><br><span class=\"line\">使用 Ubuntu 系统</span><br><span class=\"line\"></span><br><span class=\"line\">腾讯云内外网互通</span><br><span class=\"line\"></span><br><span class=\"line\">可以通过外网ip访问内网服务器上部署的网站和资源。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装必要依赖\"><a href=\"#安装必要依赖\" class=\"headerlink\" title=\"安装必要依赖\"></a>安装必要依赖</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 我们后端使用的是python ，因此这里展示python后端代码的部署</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新系统软件包</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install -y build-essential checkinstall libssl-dev zlib1g-dev libbz2-dev \\ libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\ libffi-dev liblzma-dev tk-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载指定版本的python 尽量跟本地版本保持一致</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> wget https://www.python.org/ftp/python/3.10.7/Python-3.10.7.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> tar -xvzf Python-3.10.0.tgz</span><br><span class=\"line\"><span class=\"comment\"># 进入安装目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> Python-3.10.0</span><br><span class=\"line\"><span class=\"comment\"># 编译及安装</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> ./configure --enable-optimizations</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> make altinstall</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装mysql相关依赖文件</span></span><br><span class=\"line\"><span class=\"comment\"># pkg-config 和 libmysqlclient-dev，这两个包分别用于帮助编译时查找库文件的位置和提供 MySQL 客户端开发所需的库文件</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install pkg-config libmysqlclient-dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建虚拟环境</span></span><br><span class=\"line\">python3 -m venv venv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入虚拟环境</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> venv/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在虚拟环境中安装pip</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt update</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install -y python3 python3-pip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定pip软连接 目的是全局能够访问</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">ln</span> -s /usr/local/bin/pip3 /usr/bin/pip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 本地代码中执行 生成项目依赖文件</span></span><br><span class=\"line\">pip freeze &gt; requirements.txt </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入项目代码层级 安装项目依赖</span></span><br><span class=\"line\">pip install -r requirements.txt</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装配置uwsgi\"><a href=\"#安装配置uwsgi\" class=\"headerlink\" title=\"安装配置uwsgi\"></a>安装配置uwsgi</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># uWSGI 是一个用于部署 Web 应用程序的服务器，它主要被设计用来托管 Python 应用程序，但也可以支持其他语言（如 Ruby、PHP 等）</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在settings.py同级文件创建uwsgi.ini文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">[uwsgi]</span><br><span class=\"line\"><span class=\"built_in\">chdir</span>=/home/lighthouse/workspace/muxi_shop_api2/</span><br><span class=\"line\">module=mu_shop_api.wsgi:application</span><br><span class=\"line\">master=True</span><br><span class=\"line\">pidfile=/home/lighthouse/workspace/muxi_shop_api2/project-master.pid</span><br><span class=\"line\">vacuum=True</span><br><span class=\"line\">max-requests=5000</span><br><span class=\"line\">daemonize=/home/lighthouse/workspace/muxi_shop_api2/log/uwsgi/muxishop.log</span><br><span class=\"line\">http-socket= :8000</span><br><span class=\"line\">static-map=/static/product_images=/home/lighthouse/workspace/muxi_shop_api2/static/product_images/</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装uwsgi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install -y uwsgi uwsgi-plugin-python3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动uwsgi</span></span><br><span class=\"line\">/home/lighthouse/workspace/muxi_shop_api2/venv/bin/uwsgi --ini /home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/uwsgi.ini</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">/home/lighthouse/workspace/muxi_shop_api2/venv/bin/uwsgi --stop /home/lighthouse/workspace/muxi_shop_api2/project-master.pid</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打包代码\"><a href=\"#打包代码\" class=\"headerlink\" title=\"打包代码\"></a>打包代码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包将会忽略 .gitignore中的外部库</span></span><br><span class=\"line\">git ls-files -z | tar --null -czvf muxi_shop_api2.tar.gz -T -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包后的文件</span></span><br><span class=\"line\">muxi_shop_api2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 服务器中同步创建文件夹并添加权限</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">mkdir</span> muxi_shop_api2</span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chmod</span> -R 775 /home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/</span><br><span class=\"line\"><span class=\"comment\"># 因为增加了权限可能还是无权限写入，因此更改所有者</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">chown</span> -R lighthouse:lighthouse /home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/</span><br><span class=\"line\"><span class=\"comment\"># 上传至服务器</span></span><br><span class=\"line\">scp muxi_shop_api2.tar.gz lighthouse@43.163.113.67:/home/lighthouse/workspace/muxi_shop_api2.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压代码</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> tar -xzvf muxi_shop_api2.tar.gz -C /workspace/muxi_shop_api2/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入代码的uwsgi.ini 文件目录启动</span></span><br><span class=\"line\">/home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/venv/bin/uwsgi --ini /home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/uwsgi.ini --reload /tmp/uwsgi.pid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启uwsgi</span></span><br><span class=\"line\">/home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/venv/bin/uwsgi --ini /home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/uwsgi.ini</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止uwsgi</span></span><br><span class=\"line\">/home/lighthouse/workspace/muxi_shop_api2/mu_shop_api/venv/bin/uwsgi --stop /home/lighthouse/workspace/muxi_shop_api2/project-master.pid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># **** 授权各级目录 重要 ****</span></span><br><span class=\"line\"><span class=\"comment\"># 一定要对各级目录进行授权 否则linux服务器无权限访问项目静态资源文件</span></span><br><span class=\"line\"><span class=\"comment\"># 授权还是提示无权限就改所有者</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用nginx反向代理绑定域名\"><a href=\"#使用nginx反向代理绑定域名\" class=\"headerlink\" title=\"使用nginx反向代理绑定域名\"></a>使用nginx反向代理绑定域名</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    <span class=\"comment\"># 指定域名 注意 一定要后端代码各级目录进行授权 否则无法访问相应文件夹下的代码！！！</span></span><br><span class=\"line\">    server_name queek.work;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># /api/前缀 子集域名 来区分后端的请求地址</span></span><br><span class=\"line\">    location /api/ &#123;</span><br><span class=\"line\">        proxy_pass http://localhost:8000/;</span><br><span class=\"line\">        proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-Proto <span class=\"variable\">$scheme</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /static/product_images/ &#123;</span><br><span class=\"line\">        <span class=\"built_in\">alias</span> /home/lighthouse/workspace/muxi_shop_api2/static/product_images/;</span><br><span class=\"line\">        expires max;</span><br><span class=\"line\">        add_header Cache-Control <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">        try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ =404;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这样 我们就能通过域名 queek.work/api/访问后端接口了</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"部署前端\"><a href=\"#部署前端\" class=\"headerlink\" title=\"部署前端\"></a>部署前端</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包得到dist文件</span></span><br><span class=\"line\">yarn run build </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用rsync上传</span></span><br><span class=\"line\">rsync -avz -e ssh dist/ lighthouse@43.163.113.67:/home/lighthouse/workspace/small_u-shopping_mall/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者scp上传</span></span><br><span class=\"line\"><span class=\"comment\"># scp -r 为递归传输</span></span><br><span class=\"line\">scp -r dist/ lighthouse@43.163.113.67:/home/lighthouse/workspace/small_u-shopping_mall/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 由于我们上传的是文件夹 因此不需要解压</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用niginx将域名指向我们的前端静态文件\"><a href=\"#使用niginx将域名指向我们的前端静态文件\" class=\"headerlink\" title=\"使用niginx将域名指向我们的前端静态文件\"></a>使用niginx将域名指向我们的前端静态文件</h4><h4 id=\"启用新的niginx配置文件\"><a href=\"#启用新的niginx配置文件\" class=\"headerlink\" title=\"启用新的niginx配置文件\"></a>启用新的niginx配置文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 备份旧的配置文件</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">cp</span> /etc/nginx/sites-available/default /etc/nginx/sites-available/default.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 禁用旧的配置文件（删除符号链接）</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">rm</span> /etc/nginx/sites-enabled/default</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启用新的配置文件</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">ln</span> -s /etc/nginx/sites-available/queek.work /etc/nginx/sites-enabled/</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"最终文件\"><a href=\"#最终文件\" class=\"headerlink\" title=\"最终文件\"></a>最终文件</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> nano /etc/nginx/sites-available/queek.work</span><br><span class=\"line\"> </span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name queek.work;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 要各级文件目录进行授权</span></span><br><span class=\"line\">        <span class=\"built_in\">alias</span> /home/lighthouse/workspace/small_u-shopping_mall/;  <span class=\"comment\"># 这是你上传 dist 文件夹的路径</span></span><br><span class=\"line\">        index index.html;</span><br><span class=\"line\">        try_files <span class=\"variable\">$uri</span> /index.html;  <span class=\"comment\"># Vue SPA路由需要此配置</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /api/ &#123;</span><br><span class=\"line\">        proxy_pass http://localhost:8000/;</span><br><span class=\"line\">        proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-Proto <span class=\"variable\">$scheme</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /static/product_images/ &#123;</span><br><span class=\"line\">        <span class=\"built_in\">alias</span> /home/lighthouse/workspace/muxi_shop_api2/static/product_images/;</span><br><span class=\"line\">        expires max;</span><br><span class=\"line\">        add_header Cache-Control <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">        try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ =404;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 现在我们就能通过域名访问前端网站了</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动niginx\"><a href=\"#启动niginx\" class=\"headerlink\" title=\"启动niginx\"></a>启动niginx</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看配置文件状态</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> nginx -t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#重启动nginx</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl reload nginx</span><br><span class=\"line\"><span class=\"comment\">#重启动nginx</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl restart nginx</span><br><span class=\"line\"><span class=\"comment\">#启动nginx</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果启动后访问有错误 可以查看日志</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">tail</span> -f /var/log/nginx/access.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加入证书\"><a href=\"#加入证书\" class=\"headerlink\" title=\"加入证书\"></a>加入证书</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lighthouse@VM-0-8-ubuntu:~$ <span class=\"built_in\">sudo</span> <span class=\"built_in\">cat</span> /etc/nginx/sites-available/queek.work</span><br><span class=\"line\"><span class=\"comment\"># HTTP 请求重定向到 HTTPS</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$host</span> = www.queek.work) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> 301 https://$host<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">    &#125; <span class=\"comment\"># managed by Certbot</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$host</span> = queek.work) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> 301 https://$host<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">    &#125; <span class=\"comment\"># managed by Certbot</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name queek.work www.queek.work;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 强制所有 HTTP 请求重定向到 HTTPS</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 301 https://$host<span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># HTTPS 配置</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 443 ssl;</span><br><span class=\"line\">    server_name queek.work www.queek.work;</span><br><span class=\"line\">    ssl_certificate /etc/letsencrypt/live/queek.work/fullchain.pem; <span class=\"comment\"># managed by Certbot</span></span><br><span class=\"line\"> <span class=\"comment\"># 证书路径</span></span><br><span class=\"line\">    ssl_certificate_key /etc/letsencrypt/live/queek.work/privkey.pem; <span class=\"comment\"># managed by Certbot</span></span><br><span class=\"line\"> <span class=\"comment\"># 私钥路径</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class=\"line\">    ssl_prefer_server_ciphers on;</span><br><span class=\"line\">    ssl_ciphers <span class=\"string\">&quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 启用 OCSP stapling</span></span><br><span class=\"line\">    ssl_stapling on;</span><br><span class=\"line\">    ssl_stapling_verify on;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 设置缓存有效期</span></span><br><span class=\"line\">    ssl_session_cache shared:SSL:10m;</span><br><span class=\"line\">    ssl_session_timeout 10m;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 日志设置</span></span><br><span class=\"line\">    access_log /var/log/nginx/queek.work.access.log;</span><br><span class=\"line\">    error_log /var/log/nginx/queek.work.error.log;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 反向代理配置</span></span><br><span class=\"line\">    location /api/ &#123;</span><br><span class=\"line\">        proxy_pass http://localhost:8000/;</span><br><span class=\"line\">        proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">        proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-Proto <span class=\"variable\">$scheme</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location /static/product_images/ &#123;</span><br><span class=\"line\">        <span class=\"built_in\">alias</span> /home/lighthouse/workspace/muxi_shop_api2/static/product_images/;</span><br><span class=\"line\">        expires max;</span><br><span class=\"line\">        add_header Cache-Control <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">        try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ =404;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 前端应用配置</span></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        root /home/lighthouse/workspace/small_u-shopping_mall/;  <span class=\"comment\"># 这是你上传 dist 文件夹的路径</span></span><br><span class=\"line\">        index index.html;</span><br><span class=\"line\">        try_files <span class=\"variable\">$uri</span> /index.html;  <span class=\"comment\"># Vue SPA路由需要此配置</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /shopmall/ &#123; </span><br><span class=\"line\">        <span class=\"built_in\">alias</span> /home/lighthouse/workspace/small_u-shopping_mall/;  <span class=\"comment\"># 这是你上传 dist 文件夹的路径 </span></span><br><span class=\"line\">        index index.html;</span><br><span class=\"line\">\ttry_files <span class=\"variable\">$uri</span> /index.html; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    location /welcome &#123;</span><br><span class=\"line\">        <span class=\"built_in\">alias</span> /home/lighthouse/workspace/html/;</span><br><span class=\"line\">        index test.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    location /pet &#123;</span><br><span class=\"line\">        <span class=\"built_in\">alias</span> /home/lighthouse/workspace/html/liuhuan/;</span><br><span class=\"line\">        index pet.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># location /def/ &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#    alias /home/lighthouse/workspace/frontend_def/dist/;</span></span><br><span class=\"line\">    <span class=\"comment\">#    index index.html;</span></span><br><span class=\"line\">    <span class=\"comment\">#    try_files $uri $uri/ /index.html;</span></span><br><span class=\"line\">    <span class=\"comment\"># &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">lighthouse@VM-0-8-ubuntu:~$ </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">不同的系统、平台的服务器具体配置流程可能有差异，</span><br><span class=\"line\"></span><br><span class=\"line\">需要根据需要安装相关依赖，以及进行相应的配置。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "linux部署前后端"
            ]
        },
        {
            "id": "https://queek.cn/2025/01/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1/",
            "url": "https://queek.cn/2025/01/07/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1/",
            "title": "服务器部署mysql数据库服务",
            "date_published": "2025-01-07T06:29:28.000Z",
            "content_html": "<h3 id=\"这里展示腾讯云-Ubuntu系统-（linux）部署mysql服务\"><a href=\"#这里展示腾讯云-Ubuntu系统-（linux）部署mysql服务\" class=\"headerlink\" title=\"这里展示腾讯云 Ubuntu系统 （linux）部署mysql服务\"></a>这里展示腾讯云 Ubuntu系统 （linux）部署mysql服务</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">因为目前腾讯云的云服务器公网和内网是互通的，因此我们可以使用公网ip进行连接数据库，</span><br><span class=\"line\"></span><br><span class=\"line\">而不需要进行传统的 内网穿透</span><br><span class=\"line\"></span><br><span class=\"line\">即可直接连接</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h3><ol>\n<li>更新系统包列表：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt update</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>安装MySQL服务器：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> apt install mysql-server</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>设置密码和调整安全选项(选择是否删除测试数据库，一般会选择删除)：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> mysql_secure_installation</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>登录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> mysql -u root -p</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>若没有设置密码，直接登录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> mysql -u root </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>启动MySQL服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl start mysql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>开机自启</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl <span class=\"built_in\">enable</span> mysql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"导入-sql文件\"><a href=\"#导入-sql文件\" class=\"headerlink\" title=\"导入 sql文件\"></a>导入 sql文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传sql文件至服务器</span></span><br><span class=\"line\">scp /Users/karlfranz/Desktop/muxisql.sql lighthouse@43.163.113.67:/home/lighthouse/home/sql/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># my_database 是数据库名称（不加 .sql 文件后缀）</span></span><br><span class=\"line\"><span class=\"comment\"># 后面的是服务器存放sql文件的路径 （注意不能少了 &lt; ）</span></span><br><span class=\"line\">mysql -u root -p muxi &lt; /home/lighthouse/home/sql/muxisql.sql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启mysql服务</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> systemctl restart mysql</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"># 查看导入结果</span><br><span class=\"line\">USE your_database_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SHOW</span> TABLES;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"服务器控制端开启3306防火墙放行（重要）\"><a href=\"#服务器控制端开启3306防火墙放行（重要）\" class=\"headerlink\" title=\"服务器控制端开启3306防火墙放行（重要）\"></a>服务器控制端开启3306防火墙放行（重要）</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">在防火墙添加规则</span><br><span class=\"line\"></span><br><span class=\"line\">对本机、 所有ipv4、ipv6 发起的3306端口放行。</span><br><span class=\"line\"></span><br><span class=\"line\">必须有这一步，</span><br><span class=\"line\"></span><br><span class=\"line\">否则本地电脑将无法连接远程数据库。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sql对root用户进行授权\"><a href=\"#sql对root用户进行授权\" class=\"headerlink\" title=\"sql对root用户进行授权\"></a>sql对root用户进行授权</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">为什么要进行授权？</span><br><span class=\"line\"></span><br><span class=\"line\">mysql只支持本地（localhost）链接，</span><br><span class=\"line\"></span><br><span class=\"line\">如果要支持其他主机连接数据库，就要进行授权。</span><br><span class=\"line\"></span><br><span class=\"line\">目前mysql ,无论是本地（本机ip, 不包含localhost）还是服务器部署mysql，</span><br><span class=\"line\"></span><br><span class=\"line\">要连接数据库，</span><br><span class=\"line\"></span><br><span class=\"line\">必须授权。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录</span></span><br><span class=\"line\">mysql -u root -p </span><br><span class=\"line\"><span class=\"comment\"># 选择系统默认数据库</span></span><br><span class=\"line\">use mysql;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新host 支持所有host</span></span><br><span class=\"line\">update user <span class=\"built_in\">set</span> host=<span class=\"string\">&#x27;%&#x27;</span> <span class=\"built_in\">where</span> user=<span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进行最终授权</span></span><br><span class=\"line\">GRANT ALL PRIVILEGES ON *.* TO <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> WITH GRANT OPTION;</span><br><span class=\"line\"><span class=\"comment\"># 上一句报错了执行这一句 原因未知</span></span><br><span class=\"line\">grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 刷新权限</span></span><br><span class=\"line\">flush privileges;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改配置文件，支持所有ip进行连接\"><a href=\"#修改配置文件，支持所有ip进行连接\" class=\"headerlink\" title=\"修改配置文件，支持所有ip进行连接\"></a>修改配置文件，支持所有ip进行连接</h3><p>打开配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> nano /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 找到 bind-addres 127.0.0.1</span></span><br><span class=\"line\"></span><br><span class=\"line\">修改为 bind-addres 0.0.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl + O 保存</span><br><span class=\"line\"></span><br><span class=\"line\">enter 确认文件</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl + X 退出</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 防火墙放行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> ufw allow 3306/tcp</span><br><span class=\"line\"></span><br><span class=\"line\">重启mysql服务</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用navicat进行连接\"><a href=\"#使用navicat进行连接\" class=\"headerlink\" title=\"使用navicat进行连接\"></a>使用navicat进行连接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">打开navicat</span><br><span class=\"line\"></span><br><span class=\"line\">输入腾讯云服务器的公网ip</span><br><span class=\"line\"></span><br><span class=\"line\">数据库名字密码</span><br><span class=\"line\"></span><br><span class=\"line\">点击连接</span><br><span class=\"line\"></span><br><span class=\"line\">显示连接成功</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看mysql错误日志</span></span><br><span class=\"line\"><span class=\"built_in\">sudo</span> <span class=\"built_in\">tail</span> -n 50 /var/log/mysql/error.log</span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "后端"
            ]
        },
        {
            "id": "https://queek.cn/2024/12/09/old-blog/",
            "url": "https://queek.cn/2024/12/09/old-blog/",
            "title": "旧的博客地址",
            "date_published": "2024-12-09T10:19:03.000Z",
            "content_html": "<p>因为 hexo上传到github的是编译后的文件，并不是源文件</p>\n<p>之前的代码丢失无法恢复，所以重新创建了网站</p>\n<p>旧的地址</p>\n<p><a href=\"https://karlfranz.cn/\">https://karlfranz.cn/</a></p>\n",
            "tags": [
                "date"
            ]
        },
        {
            "id": "https://queek.cn/2024/10/12/24-october-10th/",
            "url": "https://queek.cn/2024/10/12/24-october-10th/",
            "title": "24-october-10th",
            "date_published": "2024-10-12T08:32:47.000Z",
            "content_html": "<h3 id=\"任务\"><a href=\"#任务\" class=\"headerlink\" title=\"任务\"></a>任务</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">任务分为同步异步任务，</span><br><span class=\"line\"></span><br><span class=\"line\">同步先执行，</span><br><span class=\"line\"></span><br><span class=\"line\">而后执行异步任务，</span><br><span class=\"line\"></span><br><span class=\"line\">异步当中微任务先执行，</span><br><span class=\"line\"></span><br><span class=\"line\">每一个宏任务执行完，会再次查看微任务队列，有的话执行微任务队列。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">await</span> 语句后面的代码会加入微队列。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：<span class=\"keyword\">await</span> 后面的代码如果是一个宏任务，</span><br><span class=\"line\"></span><br><span class=\"line\">那么 <span class=\"keyword\">await</span> 后面要加入微队列的代码会在 <span class=\"keyword\">await</span> 后的宏任务执行完之后再执行，这是 <span class=\"keyword\">await</span> 的特性，会暂停函数中代码的执行，</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">await</span> 修饰的函数 ，会等待 <span class=\"keyword\">await</span> 后面一句的语句执行完，再执行 <span class=\"keyword\">await</span> 语句下一句的微队列代码，即使 <span class=\"keyword\">await</span> 后的语句是异</span><br><span class=\"line\"></span><br><span class=\"line\">步代码，也会等待这个语句中的异步代码完全执行完。</span><br><span class=\"line\"></span><br><span class=\"line\">要注意宏队列、微队列任务在执行过程中 不断添加宏任务、微任务到队列这些任务的执行顺序，执行顺序通常跟添加的顺序有关。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vue-hook\"><a href=\"#vue-hook\" class=\"headerlink\" title=\"vue hook\"></a>vue hook</h3><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">useBoolean</span> = (<span class=\"params\">initValue: boolean = <span class=\"literal\">false</span></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> value = <span class=\"title function_\">ref</span>(initValue);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">on</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">off</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">toggle</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    value.<span class=\"property\">value</span> = !value.<span class=\"property\">value</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> [value, &#123; toggle, on, off &#125;] <span class=\"keyword\">as</span> <span class=\"keyword\">const</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"比当前背景颜色更深的颜色\"><a href=\"#比当前背景颜色更深的颜色\" class=\"headerlink\" title=\"比当前背景颜色更深的颜色\"></a>比当前背景颜色更深的颜色</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需要两层</span><br><span class=\"line\"></span><br><span class=\"line\">一层为当前的颜色</span><br><span class=\"line\"></span><br><span class=\"line\">一层为黑色</span><br><span class=\"line\"></span><br><span class=\"line\">黑色的这一层是包裹层</span><br><span class=\"line\"></span><br><span class=\"line\">这样就能有比当前背景更深一些的颜色</span><br><span class=\"line\"></span><br><span class=\"line\">网易云、汽水音乐的背景 ，</span><br><span class=\"line\"></span><br><span class=\"line\">也是跟这差不多的实现</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img loading=\"lazy\" data-src='https://s3.bmp.ovh/imgs/2024/10/30/5ccc78689055219f.png'></img></p>\n<p><img loading=\"lazy\" data-src='https://s3.bmp.ovh/imgs/2024/10/30/c2dd0a005c6ec80b.png'></img></p>\n",
            "tags": [
                "date"
            ]
        }
    ]
}